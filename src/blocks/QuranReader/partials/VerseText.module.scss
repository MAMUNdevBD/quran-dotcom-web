// @use 'sass:map';

// @mixin generate-font-scales($name) {
//   $mobile-scales: null;
//   $tablet-scales: null;
//   $tablet-line-height-scales: null;
//   $desktop-skeleton-height-scales: null;
//   $mobile-skeleton-height-scales: null;

//   // reading view skeletons mapping
//   @if map.has-key($skeleton-height-map, $name) {
//     $desktop-skeleton-height-scales: get-scales($name, 'desktop', $skeleton-height-map);
//     $mobile-skeleton-height-scales: get-scales($name, 'mobile', $skeleton-height-map);
//   } @else {
//     $desktop-skeleton-height-scales: get-scales('default', 'desktop', $skeleton-height-map);
//     $mobile-skeleton-height-scales: get-scales('default', 'mobile', $skeleton-height-map);
//   }

//   // line heights mapping
//   @if map.has-key($line-heights-map, $name) {
//     $tablet-line-height-scales: get-scales($name, 'tablet', $line-heights-map);
//   } @else {
//     $tablet-line-height-scales: get-scales('default', 'tablet', $line-heights-map);
//   }

//   // font scales mapping
//   @if map.has-key($scales-map, $name) {
//     $mobile-scales: get-scales($name, 'mobile', $scales-map);
//     $tablet-scales: get-scales($name, 'tablet', $scales-map);
//   } @else {
//     $mobile-scales: get-scales('default', 'mobile', $scales-map);
//     $tablet-scales: get-scales('default', 'tablet', $scales-map);
//   }

//   @for $i from 1 through constants.$maximum-font-step {
//     .#{$name}-font-size-#{$i} {
//       --skeleton-height: #{map.get($mobile-skeleton-height-scales, $i)};
//       --font-size: #{map.get($mobile-scales, $i)};
//       --line-height: normal;
//       @media only screen and (min-width: 768px) {
//         --font-size: #{map.get($tablet-scales, $i)};
//         --line-height: #{map.get($tablet-line-height-scales, $i)};
//         --skeleton-height: #{map.get($desktop-skeleton-height-scales, $i)};
//       }
//       font-size: var(--font-size);
//     }
//   }
// }

.verseText {
  display: flex;
  /**
    flex-start for when the inline word by word translation/transliteration is enabled
    and its content is wrapped across multiple lines.
    {@see https://quran.com/2:74} on mobile with Inline word by word translation enabled.
  **/
  align-items: flex-start;
  line-height: normal;
}
.verseTextContainer {
  display: block;
  direction: rtl;
}

.chapterHeaderContainer {
  margin-inline-start: 1rem;
  margin-inline-end: 1rem;
}

.largeQuranTextLayoutContainer {
  display: inline;
  @media only screen and (min-width: 768px) {
    display: block;
  }
}

.largeQuranTextLayout {
  display: inline;
  @media only screen and (min-width: 768px) {
    display: flex;
  }
}

.verseTextCenterAlign {
  justify-content: center;
}
.verseTextSpaceBetween {
  justify-content: space-between;
}
.verseTextWrap {
  flex-wrap: wrap;
}

// @include generate-font-scales('code_v1');
// @include generate-font-scales('code_v2');
// @include generate-font-scales('text_indopak_15_lines');
// @include generate-font-scales('text_indopak_16_lines');
// @include generate-font-scales('qpc_uthmani_hafs');
// @include generate-font-scales('fallback_qpc_uthmani_hafs');
// @include generate-font-scales('tajweed');

.highlighted {
  background-color: #f8f9fa;
}

// On mobile, make the QuranWord slightly bigger on translation or tafsir mode
.tafsirOrTranslationMode {
  // --font-size is generated by `utility.genereate-font-sizes`
  font-size: calc(1.2 * var(--font-size));
}
